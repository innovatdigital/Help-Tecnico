<%- include('../../partials/head', {title: "Novo chamado"}) %>

<body class="bg-gray-100">
  <%- include('../../partials/sidebar', {user: user}) %>

  <div class="lg:pl-70">
    <%- include('../../partials/nav', {title: "Novo chamado"}) %>

    <main class="py-5 fade-in">
      <div style="z-index: 1" class="hidden relative fade-in" id="loading" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-white bg-opacity-50 transition-opacity"></div>
    
        <div class="flex justify-center items-center fixed inset-0 z-20 overflow-y-auto">
          <div class="mx-auto max-w-xl transform divide-y divide-gray-200 transition-all">
            <div class="c-loader"></div>
          </div>
        </div>
      </div>

      <div class="hidden relative z-10 fade-in" id="popup_equipments" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"></div>

        <div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20 mt-20">
          <div
            class="mx-auto max-w-xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all">
            <div class="flex justify-between py-3 px-6">
              <h2 class="color-purple inter font-semibold text-lg">Selecionar equipamentos:</h2>
              <button onclick="closeEquipments()">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M14.3075 11.7231L20.3075 5.67693C20.5844 5.4 20.5844 4.98462 20.3075 4.7077L19.3844 3.73847C19.1075 3.46154 18.6921 3.46154 18.4151 3.73847L12.369 9.78462C12.1844 9.96923 11.9075 9.96923 11.7228 9.78462L5.67668 3.69231C5.39976 3.41539 4.98438 3.41539 4.70745 3.69231L3.73822 4.66154C3.4613 4.93847 3.4613 5.35385 3.73822 5.63077L9.78438 11.6769C9.96899 11.8615 9.96899 12.1385 9.78438 12.3231L3.69207 18.4154C3.41514 18.6923 3.41514 19.1077 3.69207 19.3846L4.6613 20.3538C4.93822 20.6308 5.35361 20.6308 5.63053 20.3538L11.6767 14.3077C11.8613 14.1231 12.1382 14.1231 12.3228 14.3077L18.369 20.3538C18.6459 20.6308 19.0613 20.6308 19.3382 20.3538L20.3075 19.3846C20.5844 19.1077 20.5844 18.6923 20.3075 18.4154L14.3075 12.3692C14.1228 12.1846 14.1228 11.9077 14.3075 11.7231Z"
                    fill="#239CFF" />
                </svg>
              </button>
            </div>

            <% if (equipments.length > 0) { %>
              <div class="flex flex-col divide-y divide-gray-100">
                <div class="min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                  <ul class="-mx-2 text-sm text-gray-700 overflow-y-auto h-80" id="options" role="listbox">
                    <% equipments.forEach(function(item) { %>
                      <li class="group flex flex-col cursor-default select-none rounded-md p-2 mb-4 divide-gray-300" id="option-1" role="option" tabindex="-1">
                        <div class="flex items-center justify-between">
                          <div class="flex items-center space-x-4">
                            <div>
                              <img src="/img/equipments/<%= item.imageFile %>" alt="" class="h-20 flex-none rounded-lg border-purple">
                            </div>
                            
                            <div class="flex flex-col">
                              <h2 class="inter text-lg font-bold text-blue"><%= item.model %></h2>
                              <p class="inter text-sm font-semibold">Marca: <%= item.brand %></p>
                              <p class="inter text-sm font-semibold">Setor: <%= item.sector %></p>
                              <p class="inter text-sm font-semibold">Local: <%= item.local %></p>
                            </div>
                          </div>

                          <div>
                            <button onclick="selectEquipment('<%= item._id %>')" id="equipment-select-<%= item._id %>" class="text-xs rounded-full bg-blue-100 px-2 py-1 border-blue-1 text-gray-600 inter font-semibold">Selecionar</button>
                            <button onclick="deselectEquipment('<%= item._id %>')" id="equipment-deselect-<%= item._id %>" class="text-xs rounded-full bg-red-100 px-2 py-1 border-red-1 text-gray-600 inter font-semibold hidden">Deselecionar</button>
                          </div>
                        </div>
                      </li>
                    <% }) %>
                  </ul>
                </div>
              </div>
            <% } else { %>
              <div class="px-6 py-14 text-center text-sm sm:px-14">
                <p class="mt-4 font-semibold inter color-blue">Nenhum equipamento encontrado</p>
            <% } %>
          </div>
        </div>
      </div>

      <div class="px-4 sm:px-6 lg:pl-12 mt-2 col-span-3">
        <div class="bg-white rounded-xl border-2 p-4 px-5">
          <div class="flex justify-between items-center border-b pb-3">
            <div>
              <h2 class="text-xl color-blue inter font-semibold">Solicitar novo chamado</h2>
            </div>
  
            <div class="flex items-center">
              <div class="min-img flex gap-x-2 mr-2"></div>
              <button type="button" onclick="openEquipments()" class="rounded-full px-2.5 py-1 inter text-sm font-semibold shadow-sm border-blue color-blue">Selecionar equipamentos</button>
            </div>
          </div>
  
          <div class="mt-4">
            <label for="comment" class="block text-md font-medium leading-6 text-gray-900 inter font-semibold">Conteúdo do chamado:</label>
            <div class="mt-2">
              <textarea rows="3" id="description" class="block w-full border-blue-1 rounded-lg p-1.5 text-gray-900 shadow-sm ring-1 inter sm:text-sm sm:leading-6" placeholder="O ar condicionado não recebe comandos do controle."></textarea>
            </div>
          </div>
  
          <div class="mt-8 div-image">
            <label for="images" class="block text-md font-medium leading-6 text-gray-900 inter font-semibold color-blue">Imagens do chamado:</label>
            <label for="images" style="border: 2px dashed #239CFF; cursor: pointer;" class="relative block mt-2 w-full rounded-lg p-4 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
              <div class="flex justify-center">
                <svg width="45" height="45" viewBox="0 0 45 45" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M5.625 2.25C4.72989 2.25 3.87145 2.60558 3.23851 3.23851C2.60558 3.87145 2.25 4.72989 2.25 5.625V39.375C2.25 40.2701 2.60558 41.1285 3.23851 41.7615C3.87145 42.3944 4.72989 42.75 5.625 42.75H39.375C40.2701 42.75 41.1285 42.3944 41.7615 41.7615C42.3944 41.1285 42.75 40.2701 42.75 39.375V5.625C42.75 4.72989 42.3944 3.87145 41.7615 3.23851C41.1285 2.60558 40.2701 2.25 39.375 2.25H5.625ZM16.875 10.125C19.35 10.125 21.375 12.15 21.375 14.625C21.375 17.1 19.35 19.125 16.875 19.125C14.4 19.125 12.375 17.1 12.375 14.625C12.375 12.15 14.4 10.125 16.875 10.125ZM37.1227 38.25H7.86825C6.94575 38.25 6.42825 37.215 6.96825 36.4725L14.9625 27.3577C15.39 26.8852 16.1325 26.8852 16.5825 27.3352L20.25 31.5L27.135 20.7427C27.2407 20.5872 27.3837 20.4607 27.5509 20.3746C27.7181 20.2886 27.9043 20.2459 28.0923 20.2504C28.2803 20.2549 28.4641 20.3064 28.6271 20.4003C28.79 20.4941 28.9268 20.6274 29.025 20.7877L38.1127 36.5625C38.5177 37.3275 37.9777 38.25 37.1227 38.25Z" fill="#239CFF"/>
                </svg>                  
              </div>
              <span class="mt-2 files block text-sm font-semibold text-gray-900 inter">Selecione uma ou várias imagens</span>
              <span class="mt-1 block text-xs font-medium text-gray-900 inter">JPEG, PNG OU JPG</span>
              <input type="file" name="images" id="images" class="hidden" multiple accept="image/*,video/*">
            </label>
          </div>
  
          <div id="images-selected" class="flex space-x-4 flex-wrap mt-4"></div>
          
          <div class="mt-6">
            <button onclick="saveCall()" class="w-full rounded-lg bg-blue inter text-white py-2.5">Abrir chamado</button>
          </div>
        </div>
      </div>
    </main>
  </div>
</body>

<script src="/js/alert-message/alert-message.js"></script>
<script src="/js/loading-window/loading-window.js"></script>
<script>
  let images = [];
  let equipments = [];
  const description = document.querySelector("#description")
  const uploadImagesInput = document.querySelector("#images")
  const selectedImages = document.querySelector("#images-selected")
  uploadImagesInput.addEventListener('change', uploadImages);

  function selectEquipment(id) {
    if (!equipments.includes(id)) {
      const selectBtn = document.getElementById(`equipment-select-${id}`).classList.add("hidden")
      const deselectBtn = document.getElementById(`equipment-deselect-${id}`).classList.remove("hidden")

      equipments.push(id)
      console.log(equipments)
    }
  }

  function deselectEquipment(id) {
    if (equipments.includes(id)) {
      const selectBtn = document.getElementById(`equipment-select-${id}`).classList.remove("hidden")
      const deselectBtn = document.getElementById(`equipment-deselect-${id}`).classList.add("hidden")

      const indexToRemove = equipments.findIndex(item => item == id);

      if (indexToRemove !== -1) {
        equipments.splice(indexToRemove, 1);
      }

      console.log(equipments)
    }
  }

  function openEquipments() {
    const popup = document.querySelector("#popup_equipments")

    popup.classList.remove("hidden")
  }

  function closeEquipments() {
    const popup = document.querySelector("#popup_equipments")

    popup.classList.add("hidden")
  }

  function uploadImages(e) {
    let files = e.target.files;
    let length = files.length;

    for (let i = 0; i < length; i++) {
      images.push(files[i]);

      const img = document.createElement('img')
      img.classList.add("h-20", "rounded-lg", "border-blue")
      img.src = URL.createObjectURL(files[i]);

      selectedImages.appendChild(img)
    }
  }

  async function saveCall() {
    if (description.value.length == 0) {
      description.style.border = "2px solid red";
      return;
    }

    const saveImages = [];
    openLoading(true);

    for (let i = 0; i < images.length; i++) {
      const formData = new FormData();
      formData.append('image', images[i]);

      try {
        const response = await fetch('/company/save-image-call', {
          method: 'POST',
          body: formData
        });

        const filename = await response.text();
        saveImages.push(filename);
      } catch (err) {
        alertMessage("error", "Não foi possível fazer o upload das imagens", "Tente novamente mais tarde.")
      }
    }

    try {
      const response = await fetch("/company/save-call", {
        method: "POST",
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ description: description.value, photos: saveImages, equipments: equipments })
      });

      if (response.ok) {
        const data = await response.json();

        location.href = `/company/view-call/${data.call}`;
      } else {
        openLoading(false)
        alertMessage("error", "Erro interno", "Não foi possível processar a requisição.")
      }
    } catch (error) {
      openLoading(false)
      alertMessage("error", "Erro interno", "Não foi possível processar a requisição.")
      console.log(error);
    }
  }
</script>

</html>