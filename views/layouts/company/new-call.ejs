<!DOCTYPE html>
<html lang="en">

<%- include('../partials/head', {title: "title"}) %>

<body>
  <%- include('../partials/company/sidebar-company') %>

  <div class="lg:pl-70">
    <%- include('../partials/company/nav-company', {title: "Abrir chamado", notifications: notifications, photo: photo, name_user: name_user}) %>

    <main class="py-5 fade-in">
      <div class="alert mt-14" style="display: none;"><div style="display: flex;" class="alert-text"></div></div>
      <div class="error mt-14" style="display: none;"><div style="display: flex;" class="error-text"></div></div>

      <div style="z-index: 1;" class="hidden relative z-10 fade-in" id="popup_await" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"></div>
      
        <div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20 mt-40">
          <div class="mx-auto accounts transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all">      
            <div class="flex flex-col divide-y divide-gray-100">
              <div class="min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                <div class="flex flex-col divide-y divide-gray-100 px-6">
                  <div>
                    <div class="flex flex-col items-center justify-center mt-6 py-4">
                      <div class="c-loader"></div>                                        
                      <h2 for="content" class="block text-lg font-semibold leading-6 text-gray-900 inter mt-6">Criando chamado</h2>
                      <p class="inter text-center text-md font-medium">Por favor, não feche a janela ou troque de página.</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="px-4 sm:px-6 lg:pl-12 mt-2 col-span-3">
        <div class="bg-white rounded-xl shadow p-4 px-5">
          <div class="flex justify-between items-center border-b pb-3">
            <div>
              <h2 class="text-xl color-blue inter font-bold">Solicitar novo chamado</h2>
            </div>
  
            <div class="flex items-center">
              <div class="min-img flex gap-x-2 mr-2">
              </div>
              <!-- <div class="mr-2">
                <p class="text-sm inter">0 contas</p>
              </div> -->
              <button type="button" onclick="openAccounts()" class="rounded-full px-2.5 py-1 inter text-sm font-semibold shadow-sm border-blue color-blue">Selecionar equipamentos</button>
            </div>
          </div>
  
          <div class="mt-4">
            <label for="comment" class="block text-md font-medium leading-6 text-gray-900 inter font-semibold">Conteúdo do chamado:</label>
            <div class="mt-2">
              <textarea rows="3" id="description" class="block w-full border-blue rounded-lg p-1.5 text-gray-900 shadow-sm ring-1 inter ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="O ar condicionado não recebe comandos do controle."></textarea>
            </div>
          </div>
  
          <div class="mt-8 div-image">
            <label for="images" class="block text-md font-medium leading-6 text-gray-900 inter font-semibold color-blue">Imagens do chamado:</label>
            <label for="images" style="border: 2px dashed #239CFF; cursor: pointer;" class="relative block mt-2 w-full rounded-lg p-4 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
              <div class="flex justify-center">
                <svg width="45" height="45" viewBox="0 0 45 45" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M5.625 2.25C4.72989 2.25 3.87145 2.60558 3.23851 3.23851C2.60558 3.87145 2.25 4.72989 2.25 5.625V39.375C2.25 40.2701 2.60558 41.1285 3.23851 41.7615C3.87145 42.3944 4.72989 42.75 5.625 42.75H39.375C40.2701 42.75 41.1285 42.3944 41.7615 41.7615C42.3944 41.1285 42.75 40.2701 42.75 39.375V5.625C42.75 4.72989 42.3944 3.87145 41.7615 3.23851C41.1285 2.60558 40.2701 2.25 39.375 2.25H5.625ZM16.875 10.125C19.35 10.125 21.375 12.15 21.375 14.625C21.375 17.1 19.35 19.125 16.875 19.125C14.4 19.125 12.375 17.1 12.375 14.625C12.375 12.15 14.4 10.125 16.875 10.125ZM37.1227 38.25H7.86825C6.94575 38.25 6.42825 37.215 6.96825 36.4725L14.9625 27.3577C15.39 26.8852 16.1325 26.8852 16.5825 27.3352L20.25 31.5L27.135 20.7427C27.2407 20.5872 27.3837 20.4607 27.5509 20.3746C27.7181 20.2886 27.9043 20.2459 28.0923 20.2504C28.2803 20.2549 28.4641 20.3064 28.6271 20.4003C28.79 20.4941 28.9268 20.6274 29.025 20.7877L38.1127 36.5625C38.5177 37.3275 37.9777 38.25 37.1227 38.25Z" fill="#239CFF"/>
                </svg>                  
              </div>
              <span class="mt-2 files block text-sm font-semibold text-gray-900 inter">Selecione uma ou várias imagens</span>
              <input type="file" name="images" id="images" class="hidden" multiple>
            </label>
          </div>
  
          <div id="images-selected" class="flex space-x-4 flex-wrap mt-8"></div>
          
          <div class="mt-2">
            <button onclick="saveCall()" class="w-full rounded-lg bg-blue inter text-white py-2.5">Criar novo chamado</button>
          </div>
        </div>
      </div>
    </main>
  </div>
</body>

<script>
  let images = [];
  const description = document.querySelector("#description")
  const uploadImagesInput = document.querySelector("#images")
  const selectedImages = document.querySelector("#images-selected")
  uploadImagesInput.addEventListener('change', uploadImages);

  function alert_message(type, content) {
    if (type == 'error') {
      const divMessage = document.querySelector(".error");
      divMessage.style.display = "flex";
      divMessage.innerHTML = "";
      const message = document.createElement("p");
      const img = document.createElement("img");
      img.width = "28"
      img.height = "28"
      img.src = "/img/admin/Bulk/error.png"
      message.classList.add("message-notify");
      message.innerText = content;
      divMessage.appendChild(img);
      divMessage.appendChild(message);

      setTimeout(() => {
        divMessage.style = "animation: slideoff 2s;"
        setTimeout(() => {
          divMessage.style = "display: none"
        }, 800)
      }, 2000);
    } else if (type == "success") {
      const divMessage = document.querySelector(".alert");
      divMessage.style.display = "flex";
      divMessage.innerHTML = "";
      const message = document.createElement("p");
      const img = document.createElement("img");
      img.width = "28"
      img.height = "28"
      img.src = "/img/admin/Bulk/checked.png"
      message.classList.add("message-notify");
      message.innerText = content;
      divMessage.appendChild(img);
      divMessage.appendChild(message);

      setTimeout(() => {
        divMessage.style = "animation: slideoff 2s;"
        setTimeout(() => {
          divMessage.style = "display: none"
        }, 800)
      }, 2000);
    }
  }

  function uploadImages(e) {
    let files = e.target.files;
    let length = files.length;

    for (let i = 0; i < length; i++) {
      images.push(files[i]);

      const img = document.createElement('img')
      img.classList.add("h-20", "rounded-lg", "border-blue")
      img.src = URL.createObjectURL(files[i]);

      selectedImages.appendChild(img)
    }
  }

  async function saveCall() {
    if (description.value.length == 0) {
      description.style.border = "2px solid red";
      return;
    }

    const saveImages = [];
    openLoading(true);

    for (let i = 0; i < images.length; i++) {
      const formData = new FormData();
      formData.append('image', images[i]);

      try {
        const response = await fetch('/company/save-image-call', {
          method: 'POST',
          body: formData
        });

        const filename = await response.text();
        saveImages.push(filename);
      } catch (err) {
        console.error(err);
      }
    }

    try {
      const response = await fetch("/company/save-call", {
        method: "POST",
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ description: description.value, photos: saveImages })
      });

      if (response.ok) {
        openLoading(false)
        const data = await response.json();

        location.href = "/company/view-call";
      } else {
        alert_message("error", "Não foi possível abrir o chamado.");
        openLoading(false)
      }
    } catch (error) {
      console.log(error);
    }
  }

  function openLoading(boolean) {
    const popup_await = document.querySelector("#popup_await")

    if (boolean) {
      popup_await.classList.remove("hidden")
    } else {
      popup_await.classList.add("hidden")
    }
  }
</script>

</html>