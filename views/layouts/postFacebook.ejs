<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>pluBee | Nova publicação</title>
  <!-- Favicon -->
  <link rel="shortcut icon" href="/img/site/plubee-icon.png" type="image/x-icon">
  <!-- Custom styles -->
  <link rel="stylesheet" href="/css/platform/style.css">
  <link rel="stylesheet" href="/css/platform/notify.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/1.8.12/tailwind-experimental.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
</head>

<body>
  <%- include('../partials/sidebar-platform', {isAdmin: isAdmin}) %>

  <div class="lg:pl-70">
    <%- include('../partials/nav-platform', {isAdmin: isAdmin, title: "Nova publicação no Facebook", notifications: notifications, photo: photo, name_user: name_user}) %>

    <main class="py-8 px-12 fade-in">
      <div class="alert mt-10" style="display: none;"><div style="display: flex;" class="alert-text"></div></div>
      <div class="error" style="display: none;"><div style="display: flex;" class="error-text"></div></div>

      <div class="hidden relative z-10 fade-in" id="popup_post" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"></div>
      
        <div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20 mt-20">
          <div class="mx-auto accounts transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all">
            <div class="flex justify-between py-3 px-6">
              <h2 class="color-purple inter font-semibold text-lg">Pré-visualizar</h2>
              <button onclick="closePost()">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M14.3075 11.7231L20.3075 5.67693C20.5844 5.4 20.5844 4.98462 20.3075 4.7077L19.3844 3.73847C19.1075 3.46154 18.6921 3.46154 18.4151 3.73847L12.369 9.78462C12.1844 9.96923 11.9075 9.96923 11.7228 9.78462L5.67668 3.69231C5.39976 3.41539 4.98438 3.41539 4.70745 3.69231L3.73822 4.66154C3.4613 4.93847 3.4613 5.35385 3.73822 5.63077L9.78438 11.6769C9.96899 11.8615 9.96899 12.1385 9.78438 12.3231L3.69207 18.4154C3.41514 18.6923 3.41514 19.1077 3.69207 19.3846L4.6613 20.3538C4.93822 20.6308 5.35361 20.6308 5.63053 20.3538L11.6767 14.3077C11.8613 14.1231 12.1382 14.1231 12.3228 14.3077L18.369 20.3538C18.6459 20.6308 19.0613 20.6308 19.3382 20.3538L20.3075 19.3846C20.5844 19.1077 20.5844 18.6923 20.3075 18.4154L14.3075 12.3692C14.1228 12.1846 14.1228 11.9077 14.3075 11.7231Z" fill="#752A7A"/>
                </svg>                  
              </button>
            </div>

            <div class="flex flex-col divide-y divide-gray-100">
              <div id="img-pre" class="min-w-0 hidden flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                <div class="flex flex-col mb-2">
                  <h2 class="text-lg font-semibold color-purple">Imagem selecionada:</h2>
                  <img id="img-src" class="w-60 mt-2 rounded-lg" src="" alt="pre-visualização da publicação">     
                </div>
              </div>

              <div id="link-pre" class="min-w-0 hidden flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                <div class="flex flex-col mb-2 p-3 bg-gray-200 rounded-lg border-gray">
                  <h2 class="text-sm font-semibold text-gray-800">Link importado:</h2>
                  <p class="inter text-md link-content font-medium"></p>      
                </div>
              </div>

              <div class="min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                <div class="flex mb-2">
                  <h2 class="text-lg font-semibold color-purple">Conteúdo da publicação:</h2>      
                </div>
                
                <p class="description inter text-gray-700 text-md font-medium"></p>
              </div>

              <div class="min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                <div class="flex mb-2">
                  <h2 class="text-lg font-bold color-purple inter">Programar publicação:</h2>      
                </div>

                <div class="flex mt-2">
                  <div class="flex items-center">
                    <input name="program" id="program-yes" value="yes" tabindex="1" onclick="show()" type="radio" checked class="h-4 w-4 border-gray-300 text-indigo-600">
                    <label for="program-yes" class="ml-3 block text-sm font-medium leading-6 text-gray-900 inter">Programar</label>
                  </div>
      
                  <div class="flex items-center ml-6">
                    <input name="program" id="program-no" value="no" tabindex="2" onclick="hide()" type="radio" checked class="h-4 w-4 border-gray-300 text-indigo-600">
                    <label for="program-no" class="ml-3 block text-sm font-medium leading-6 text-gray-900 inter">Não programar</label>
                  </div>
                </div>
                
                <div class="hidden mt-2 -space-y-px rounded-md bg-white shadow-sm program">
                  <div class="flex -space-x-px">
                    <div class="w-1/2 min-w-0 flex-1">
                      <input type="date" id="day" class="relative block inter w-full rounded-none rounded-l-lg border-purple px-2 bg-transparent py-1 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="MM / YY">
                    </div>
                    <div class="min-w-0 flex-1">
                      <input type="time" id="hour" class="relative block inter w-full rounded-none rounded-r-lg border-purple px-2 bg-transparent py-1 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="CVC">
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="pb-3 px-6">
              <button onclick="post()" class="w-full py-2.5 inter bg-purple text-white text-sm rounded-lg mt-4">Confirmar</button>
            </div>
          </div>
        </div>
      </div>

      <div class="hidden relative z-10 fade-in" id="popup_accounts" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"></div>
      
        <div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20 mt-20">
          <div class="mx-auto accounts transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all">
            <div class="flex justify-between py-3 px-6">
              <h2 class="color-purple inter font-semibold text-lg">Selecionar contas:</h2>
              <button onclick="closeAccounts()">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M14.3075 11.7231L20.3075 5.67693C20.5844 5.4 20.5844 4.98462 20.3075 4.7077L19.3844 3.73847C19.1075 3.46154 18.6921 3.46154 18.4151 3.73847L12.369 9.78462C12.1844 9.96923 11.9075 9.96923 11.7228 9.78462L5.67668 3.69231C5.39976 3.41539 4.98438 3.41539 4.70745 3.69231L3.73822 4.66154C3.4613 4.93847 3.4613 5.35385 3.73822 5.63077L9.78438 11.6769C9.96899 11.8615 9.96899 12.1385 9.78438 12.3231L3.69207 18.4154C3.41514 18.6923 3.41514 19.1077 3.69207 19.3846L4.6613 20.3538C4.93822 20.6308 5.35361 20.6308 5.63053 20.3538L11.6767 14.3077C11.8613 14.1231 12.1382 14.1231 12.3228 14.3077L18.369 20.3538C18.6459 20.6308 19.0613 20.6308 19.3382 20.3538L20.3075 19.3846C20.5844 19.1077 20.5844 18.6923 20.3075 18.4154L14.3075 12.3692C14.1228 12.1846 14.1228 11.9077 14.3075 11.7231Z" fill="#752A7A"/>
                </svg>                  
              </button>
            </div>
      
            <% if (accounts.length > 0) { %>
              <div class="flex flex-col divide-y divide-gray-100">
                <div class="min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                  <div class="flex mb-2">
                    <h2 class="text-lg font-semibold">Páginas importadas:</h2>      
                  </div>
                  
                  <ul class="-mx-2 text-sm text-gray-700 overflow-y-auto h-48" id="options" role="listbox">
                    <% accounts.forEach(function(item) { %>
                      <li class="group flex flex-col cursor-default select-none rounded-md p-2 mb-4" id="option-1" role="option" tabindex="-1">
                        <div>
                          <div class="flex items-center">
                            <img src="<%= item.photo %>" alt="" class="h-9 flex-none rounded-full border-purple">
                            <span style="font-size: 15px;" class="ml-3 flex-auto truncate inter font-semibold color-purple"><%= item.name %></span>
                          </div>
                        </div>

                        <ul class="ml-3 mt-1">
                          <% item.pages.forEach(function(page) { %>
                            <li class="flex justify-between items-center mt-2">
                              <div class="flex items-center">
                                <img src="<%= page.image %>" class="w-7 h-7 flex-none rounded-full">
                                <span class="ml-3 flex-auto truncate inter"><%= page.name %></span>
                              </div>

                              <div>
                                <button id="add-page<%= page.id_page %>" onclick="add_page('<%= page.id_page %>', '<%= page.name %>', '<%= page.image %>', '<%= page.access_token %>')">
                                  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g clip-path="url(#clip0_82_87)">
                                    <path d="M11 20.625C16.3158 20.625 20.625 16.3158 20.625 11C20.625 5.68426 16.3158 1.375 11 1.375C5.68426 1.375 1.375 5.68426 1.375 11C1.375 16.3158 5.68426 20.625 11 20.625Z" stroke="#752A7A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M6.875 11H15.125" stroke="#752A7A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M11 6.875V15.125" stroke="#752A7A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </g>
                                    <defs>
                                    <clipPath id="clip0_82_87">
                                    <rect width="22" height="22" fill="white"/>
                                    </clipPath>
                                    </defs>
                                  </svg>                                                                        
                                </button>
                                
                                <button id="del-page<%= page.id_page %>" style="display: none;" onclick="del_page('<%= page.id_page %>', '<%= page.image %>')">
                                  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M13.1165 10.7461L18.6165 5.20383C18.8703 4.94998 18.8703 4.56921 18.6165 4.31537L17.7703 3.42691C17.5165 3.17306 17.1357 3.17306 16.8819 3.42691L11.3395 8.96921C11.1703 9.13844 10.9165 9.13844 10.7472 8.96921L5.20493 3.3846C4.95108 3.13075 4.57031 3.13075 4.31647 3.3846L3.42801 4.27306C3.17416 4.52691 3.17416 4.90768 3.42801 5.16152L8.97031 10.7038C9.13954 10.8731 9.13954 11.1269 8.97031 11.2961L3.3857 16.8808C3.13185 17.1346 3.13185 17.5154 3.3857 17.7692L4.27416 18.6577C4.52801 18.9115 4.90877 18.9115 5.16262 18.6577L10.7049 13.1154C10.8742 12.9461 11.128 12.9461 11.2972 13.1154L16.8395 18.6577C17.0934 18.9115 17.4742 18.9115 17.728 18.6577L18.6165 17.7692C18.8703 17.5154 18.8703 17.1346 18.6165 16.8808L13.1165 11.3384C12.9472 11.1692 12.9472 10.9154 13.1165 10.7461Z" fill="#A31313"/>
                                  </svg>                                    
                                </button>
                              </div>
                            </li>
                          <% }) %>
                        </ul>
                      </li>
                    <% }) %>
                  </ul>
                </div>

                <div class="min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                  <div class="flex justify-between mb-2">
                    <h2 class="text-lg font-semibold">Grupos importados:</h2>
                    <% if (type_account == "Avançado") { %>
                      <button onclick="add_all_groups()" class="event-all px-1.5 py-0.5 rounded-full inter font-semibold text-sm">Todos</button>     
                      <button style="display: none;" class="event-delete px-1.5 py-0.5 rounded-full inter font-semibold text-sm" onclick="delete_all_groups()">Desfazer</button>
                    <% } %> 
                  </div>
                  
                  <ul class="-mx-2 text-sm text-gray-700 overflow-y-auto h-48" id="options" role="listbox">
                    <% groups.forEach(function(item) { %>
                      <li class="group flex justify-between items-center cursor-default select-none rounded-md px-2 py-1" id="option-1" role="option" tabindex="-1">
                        <div class="flex items-center">
                          <% if (item.image) { %>
                            <img src="<%= item.image %>" class="w-8 h-8 flex-none rounded-full">
                          <% } else { %>
                            <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <g clip-path="url(#clip0_111_100)">
                              <path d="M14.9212 4.71216C12.3376 4.71216 10.2432 7.15741 10.2432 10.1738C10.2432 12.2657 11.2506 14.0826 12.7299 15L11.0145 15.795L6.44948 17.9122C6.00848 18.1327 5.78838 18.5066 5.78838 19.0359C5.78838 20.7117 5.78838 22.3875 5.78838 24.0634C5.82465 24.692 6.2018 25.2778 6.81328 25.2878H23.0538C23.7519 25.2271 24.105 24.6648 24.1119 24.0634C24.1119 22.3876 24.1119 20.7117 24.1119 19.0359C24.1119 18.5066 23.8918 18.1327 23.4508 17.9122L19.0511 15.795L17.2227 14.9287C18.6413 13.9907 19.5992 12.2131 19.5992 10.1738C19.5992 7.15741 17.5047 4.71216 14.9212 4.71216ZM7.37558 6.63276C6.26375 6.67498 5.3826 7.15608 4.71315 7.92266C3.97265 8.84561 3.61165 9.94141 3.60467 11.0315C3.65015 12.6435 4.3714 14.1695 5.6554 14.9677L0.529075 17.3499C0.17625 17.4822 0 17.7909 0 18.276V22.3109C0.02755 22.8461 0.3054 23.2958 0.826375 23.3035H4.23348V19.0359C4.28985 17.8949 4.82565 16.9726 5.78838 16.5226L9.19455 14.9022C9.45915 14.7478 9.71283 14.538 9.95538 14.2734C8.55098 12.1065 8.35595 9.51108 9.26105 7.22833C8.67237 6.86806 8.0108 6.63653 7.37558 6.63276ZM22.5902 6.63276C21.8632 6.64798 21.1912 6.91573 20.6393 7.29386C21.5197 9.59728 21.2768 12.1943 19.9772 14.2069C20.2639 14.5376 20.5623 14.7913 20.871 14.9677L24.1452 16.5226C25.1426 17.0696 25.6569 18 25.6668 19.0359V23.3036H29.1727C29.7492 23.2538 29.995 22.7939 30 22.311V18.276C30 17.835 29.8238 17.5263 29.4709 17.3499L24.4102 14.9344C25.7226 13.9667 26.3816 12.5164 26.3944 11.0315C26.3595 9.85621 26.0004 8.76491 25.2859 7.92266C24.5392 7.11268 23.6132 6.64133 22.5902 6.63276Z" fill="#752A7A"/>
                              </g>
                              <defs>
                              <clipPath id="clip0_111_100">
                              <rect width="30" height="30" fill="white"/>
                              </clipPath>
                              </defs>
                            </svg>                              
                          <% } %>
                          <span class="ml-3 flex-auto truncate inter font-semibold"><%= item.name %></span>
                        </div>
                        
                        <div class="flex items-center">
                          <button class="add-group" id="add-group<%= item.id %>" onclick="add_group('<%= item.id %>', '<%= item.name.replace(/'/g, '&#39;').replace(/"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/&/g, '&amp;').replace(/á/g, '&aacute;').replace(/é/g, '&eacute;').replace(/í/g, '&iacute;').replace(/ó/g, '&oacute;').replace(/ú/g, '&uacute;').replace(/ã/g, '&atilde;').replace(/õ/g, '&otilde;') %>', '<%= item.image %>', '<%= item.access_token %>')">
                            <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <g clip-path="url(#clip0_82_87)">
                              <path d="M11 20.625C16.3158 20.625 20.625 16.3158 20.625 11C20.625 5.68426 16.3158 1.375 11 1.375C5.68426 1.375 1.375 5.68426 1.375 11C1.375 16.3158 5.68426 20.625 11 20.625Z" stroke="#752A7A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                              <path d="M6.875 11H15.125" stroke="#752A7A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                              <path d="M11 6.875V15.125" stroke="#752A7A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                              </g>
                              <defs>
                              <clipPath id="clip0_82_87">
                              <rect width="22" height="22" fill="white"/>
                              </clipPath>
                              </defs>
                            </svg>
                          </button>

                          <button class="delete-group" id="del-group<%= item.id %>" style="display: none;" onclick="del_group('<%= item.id %>', '<%= item.image %>')">
                            <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <path d="M13.1165 10.7461L18.6165 5.20383C18.8703 4.94998 18.8703 4.56921 18.6165 4.31537L17.7703 3.42691C17.5165 3.17306 17.1357 3.17306 16.8819 3.42691L11.3395 8.96921C11.1703 9.13844 10.9165 9.13844 10.7472 8.96921L5.20493 3.3846C4.95108 3.13075 4.57031 3.13075 4.31647 3.3846L3.42801 4.27306C3.17416 4.52691 3.17416 4.90768 3.42801 5.16152L8.97031 10.7038C9.13954 10.8731 9.13954 11.1269 8.97031 11.2961L3.3857 16.8808C3.13185 17.1346 3.13185 17.5154 3.3857 17.7692L4.27416 18.6577C4.52801 18.9115 4.90877 18.9115 5.16262 18.6577L10.7049 13.1154C10.8742 12.9461 11.128 12.9461 11.2972 13.1154L16.8395 18.6577C17.0934 18.9115 17.4742 18.9115 17.728 18.6577L18.6165 17.7692C18.8703 17.5154 18.8703 17.1346 18.6165 16.8808L13.1165 11.3384C12.9472 11.1692 12.9472 10.9154 13.1165 10.7461Z" fill="#A31313"/>
                            </svg>                              
                          </button>
                        </div>
                      </li>
                    <% }) %>
                  </ul>
                </div>
              </div>
            <% } else { %>
              <div class="px-6 py-14 text-center text-sm sm:px-14">
                <svg class="mx-auto h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z" />
                </svg>
                <p class="mt-4 font-semibold inter color-purple">Nenhuma conta encontrada</p>
                <p class="mt-2 text-gray-500">Para fazer uma publicação, você precisará importar uma conta primeiro.</p>
              </div>
            <% } %>
          </div>
        </div>
      </div>

      <div style="z-index: 1;" class="hidden relative z-10 fade-in" id="popup_await" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"></div>
      
        <div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20 mt-40">
          <div class="mx-auto accounts transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all">      
            <div class="flex flex-col divide-y divide-gray-100">
              <div class="min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4">
                <div class="flex flex-col divide-y divide-gray-100 px-6">
                  <div>
                    <div class="flex flex-col items-center justify-center mt-6 py-4">
                      <div class="c-loader"></div>                                        
                      <h2 for="content" class="block text-lg font-semibold leading-6 text-gray-900 inter mt-6">Realizando a publicação</h2>
                      <p class="inter text-center text-md font-medium">Por favor, não feche a janela ou troque de página.</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow p-4 px-5">
        <div class="flex justify-between items-center border-b pb-3">
          <div>
            <h2 class="text-xl color-purple inter font-bold">Criar nova publicação:</h2>
          </div>

          <div class="flex items-center">
            <div class="min-img flex gap-x-2 mr-2">
            </div>
            <!-- <div class="mr-2">
              <p class="text-sm inter">0 contas</p>
            </div> -->
            <button type="button" onclick="openAccounts()" class="rounded-full px-2.5 py-1 inter text-sm font-semibold shadow-sm border-purple color-purple">Selecionar contas</button>
          </div>
        </div>

        <div class="mt-4">
          <label for="comment" class="block text-md font-medium leading-6 text-gray-900 inter font-semibold">Conteúdo da publicação</label>
          <div class="mt-2">
            <textarea rows="3" id="content-post" class="block w-full border-purple rounded-lg p-1.5 text-gray-900 shadow-sm ring-1 inter ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="Essa receita especial possui diversos benefícios para a nossa saúde."></textarea>
          </div>
        </div>

        <div class="mt-8 div-link">
          <label for="link" class="block text-md font-medium leading-6 text-gray-900 inter font-semibold">Importar um link</label>
          <div class="relative mt-2 rounded-md shadow-sm">
            <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
              <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M7.33203 7.33333C5.27136 7.33333 3.66536 8.93933 3.66536 11C3.66536 13.0607 5.27136 14.6667 7.33203 14.6667H9.16536C9.40848 14.6667 9.64164 14.7632 9.81355 14.9352C9.98545 15.1071 10.082 15.3402 10.082 15.5833C10.082 15.8264 9.98545 16.0596 9.81355 16.2315C9.64164 16.4034 9.40848 16.5 9.16536 16.5H7.33203C4.25936 16.5 1.83203 14.0727 1.83203 11C1.83203 7.92733 4.25936 5.5 7.33203 5.5H9.16536C9.40848 5.5 9.64164 5.59658 9.81355 5.76849C9.98545 5.94039 10.082 6.17355 10.082 6.41667C10.082 6.65978 9.98545 6.89294 9.81355 7.06485C9.64164 7.23676 9.40848 7.33333 9.16536 7.33333H7.33203ZM11.9154 6.41667C11.9154 6.17355 12.0119 5.94039 12.1839 5.76849C12.3558 5.59658 12.5889 5.5 12.832 5.5H14.6654C17.738 5.5 20.1654 7.92733 20.1654 11C20.1654 14.0727 17.738 16.5 14.6654 16.5H12.832C12.5889 16.5 12.3558 16.4034 12.1839 16.2315C12.0119 16.0596 11.9154 15.8264 11.9154 15.5833C11.9154 15.3402 12.0119 15.1071 12.1839 14.9352C12.3558 14.7632 12.5889 14.6667 12.832 14.6667H14.6654C16.726 14.6667 18.332 13.0607 18.332 11C18.332 8.93933 16.726 7.33333 14.6654 7.33333H12.832C12.5889 7.33333 12.3558 7.23676 12.1839 7.06485C12.0119 6.89294 11.9154 6.65978 11.9154 6.41667ZM6.41536 11C6.41536 10.7569 6.51194 10.5237 6.68385 10.3518C6.85576 10.1799 7.08892 10.0833 7.33203 10.0833H14.6654C14.9085 10.0833 15.1416 10.1799 15.3135 10.3518C15.4855 10.5237 15.582 10.7569 15.582 11C15.582 11.2431 15.4855 11.4763 15.3135 11.6482C15.1416 11.8201 14.9085 11.9167 14.6654 11.9167H7.33203C7.08892 11.9167 6.85576 11.8201 6.68385 11.6482C6.51194 11.4763 6.41536 11.2431 6.41536 11Z" fill="#752A7A"/>
              </svg>                                
            </div>
            <input type="text" name="link" id="link" class="block link w-full rounded-lg inter py-1.5 mt-2 pl-10 text-gray-900 ring-1 ring-inset ring-gray-300 sm:text-sm sm:leading-6 border-purple" placeholder="Insira o link">
          </div>
        </div>

        <div class="mt-8 div-image">
          <label for="files" class="block text-md font-medium leading-6 text-gray-900 inter font-semibold color-purple">Imagem da publicação</label>
          <label for="files" style="border: 2px dashed #752a7a; cursor: pointer;" class="relative block mt-2 w-full rounded-lg p-4 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
            <div class="flex justify-center">
              <svg width="45" height="45" viewBox="0 0 45 45" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M5.625 2.25C4.72989 2.25 3.87145 2.60558 3.23851 3.23851C2.60558 3.87145 2.25 4.72989 2.25 5.625V39.375C2.25 40.2701 2.60558 41.1285 3.23851 41.7615C3.87145 42.3944 4.72989 42.75 5.625 42.75H39.375C40.2701 42.75 41.1285 42.3944 41.7615 41.7615C42.3944 41.1285 42.75 40.2701 42.75 39.375V5.625C42.75 4.72989 42.3944 3.87145 41.7615 3.23851C41.1285 2.60558 40.2701 2.25 39.375 2.25H5.625ZM16.875 10.125C19.35 10.125 21.375 12.15 21.375 14.625C21.375 17.1 19.35 19.125 16.875 19.125C14.4 19.125 12.375 17.1 12.375 14.625C12.375 12.15 14.4 10.125 16.875 10.125ZM37.1227 38.25H7.86825C6.94575 38.25 6.42825 37.215 6.96825 36.4725L14.9625 27.3577C15.39 26.8852 16.1325 26.8852 16.5825 27.3352L20.25 31.5L27.135 20.7427C27.2407 20.5872 27.3837 20.4607 27.5509 20.3746C27.7181 20.2886 27.9043 20.2459 28.0923 20.2504C28.2803 20.2549 28.4641 20.3064 28.6271 20.4003C28.79 20.4941 28.9268 20.6274 29.025 20.7877L38.1127 36.5625C38.5177 37.3275 37.9777 38.25 37.1227 38.25Z" fill="#752A7A"/>
              </svg>
            </div>
            <span class="mt-2 files block text-sm font-semibold text-gray-900 inter">Selecione uma imagem</span>
            <input type="file" name="files" id="files" class="hidden">
          </label>
        </div>

        <div class="hidden mt-4 link-success">
          <h2 class="block text-md font-medium leading-6 inter font-semibold color-purple">Você importou um link</h2>
        </div>

        <div class="hidden mt-4 image-success">
          <h2 class="block text-md font-medium leading-6 inter font-semibold color-purple">Imagem importada com sucesso.</h2>
        </div>

        <div>
          <button class="w-full py-3 inter bg-purple text-white text-sm rounded-lg mt-4" onclick="continue_options()">Continuar</button>
        </div>
      </div>
    </main>
  </div>
</body>

<script>
  const div_image = document.querySelector('.div-image')
  const link_success = document.querySelector('.link-success')
  const image_success = document.querySelector('.image-success')
  let file_input = document.querySelector('#files');
  const min_img = document.querySelector('.min-img')
  let groups = []
  let images = [];
  let pages = []

  const today = new Date();
  const dayInput = document.getElementById("day");
  dayInput.valueAsDate = today;

  const now = new Date();
  now.setMinutes(now.getMinutes() + 15);
  const hourInput = document.getElementById("hour");
  hourInput.value = now.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});

  const link_image = document.querySelector('.link_image')
  const div_link = document.querySelector('.div-link')
  const img_post = document.querySelector('.img-post')
  const link_h3 = document.querySelector('.link_h3')
  const link_p = document.querySelector('.link_p')
  const div_img = document.querySelector('.div-img')
  const link_content = document.querySelector('.link_content')
  const link_error = document.querySelector('.link_error')
  let image_preview = document.querySelector('.results');
  const enable = document.querySelector('.enable')
  const link = document.querySelector('#link')

  function openAccounts() {
    const popup = document.querySelector("#popup_accounts")
    popup.classList.remove("hidden")
  }

  function closeAccounts() {
    const popup = document.querySelector("#popup_accounts")

    popup.classList.add("hidden")
  }

  function openPost() {
    const popup = document.querySelector("#popup_post")

    popup.classList.remove("hidden")

    const pre_img = document.querySelector("#img-pre")
    const img_src = document.querySelector("#img-src")
    const link_pre = document.querySelector("#link-pre")
    const link_content = document.querySelector(".link-content")
    const description = document.querySelector(".description")
    const content = document.querySelector('#content-post');
    
    pre_img.classList.add("hidden")
    link_pre.classList.add("hidden")
    
    description.innerText = content.value

    if (images.length > 0) {
      pre_img.classList.remove("hidden")
      img_src.src = window.URL.createObjectURL(files.files[0])
    } else {
      link_pre.classList.remove("hidden")
      link_content.innerText = link.value
    }
  }

  function closePost() {
    const popup = document.querySelector("#popup_post")

    popup.classList.add("hidden")
  }

  link.addEventListener('input', function() {
    const valor = link.value;

    const linkValid = /^(http|https):\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,}(\/\S*)?$/;

    if (linkValid.test(valor)) {
      file_input.disabled = true
      file_input.readOnly = true
      file_input.style.display = "none"
      div_image.classList.add("hidden")
      
      fetch(`https://graph.facebook.com/v12.0/?id=${link.value}&fields=og_object{title,description,image}`, { method: 'GET' })
        .then(response => {
          if (response.ok) {
            return response.json()
          }
        })
        .then(data => {
          const title = data.og_object.title;
          const description = data.og_object.description;
          const image = data.og_object.image.url;
        })
        
      link_success.classList.remove("hidden")
    } else {
      file_input.disabled = false
      file_input.readOnly = false
      div_image.classList.add("flex", "flex-col")
      div_image.classList.remove("hidden")
      link_success.classList.add("hidden")
    }
  })
  
  function alert_message(type, content) {
    if (type == 'error') {
      const divMessage = document.querySelector(".error");
      divMessage.style.display = "flex";
      divMessage.innerHTML = "";
      const message = document.createElement("p");
      const img = document.createElement("img");
      img.width = "28"
      img.height = "28"
      img.src = "/img/admin/Bulk/error.png"
      message.classList.add("message-notify");
      message.innerText = content;
      divMessage.appendChild(img);
      divMessage.appendChild(message);

      setTimeout(() => {
        divMessage.style = "animation: slideoff 2s;"
        setTimeout(() => {
          divMessage.style = "display: none"
        }, 800)
      }, 2000);
    } else if (type == "success") {
      const divMessage = document.querySelector(".alert");
      divMessage.style.display = "flex";
      divMessage.innerHTML = "";
      const message = document.createElement("p");
      const img = document.createElement("img");
      img.width = "28"
      img.height = "28"
      img.src = "/img/admin/Bulk/checked.png"
      message.classList.add("message-notify");
      message.innerText = content;
      divMessage.appendChild(img);
      divMessage.appendChild(message);

      setTimeout(() => {
        divMessage.style = "animation: slideoff 2s;"
        setTimeout(() => {
          divMessage.style = "display: none"
        }, 800)
      }, 2000);
    }
  }

  const handle_file_preview = (e) => {
    let files = e.target.files;
    let length = files.length;

    for(let i = 0; i < length; i++) {
      images = []

      div_link.classList.add("hidden")
      image_success.classList.remove("hidden")

      images.push(files[i]);
    }
  }

  file_input.addEventListener('change', handle_file_preview);

  function open_pages() {
    const min = document.querySelector('.min')
    const options = document.querySelector('.options')

    min.style.display = "none"
    options.style.display = "flex"
  }
  
  function close_pages() {
    const min = document.querySelector('.min')
    const options = document.querySelector('.options')

    min.style.display = "flex"
    options.style.display = "none"
  }

  function add_page(id, name, icon, access_token) {
    const add = document.querySelector(`#add-page${id}`)
    add.style.display = "none";
    const remove = document.querySelector(`#del-page${id}`)
    remove.style.display = "flex";
    pages.push({id: id, name: name, icon: icon, access_token: access_token})
    const selects = document.querySelector(".selects-page")

    let image = document.createElement('img')
    image.classList.add("w-8", "h-8", "rounded-full", `img${id}`)
    image.src = icon
    min_img.appendChild(image);
  }

  function del_page(id, icon) {
    const add = document.querySelector(`#add-page${id}`)
    add.style.display = "flex";
    const remove = document.querySelector(`#del-page${id}`)
    remove.style.display = "none";
    pages.pop({id: id})
    const selects = document.querySelector(".selects-page")

    const imageToDelete = document.querySelector(`.img${id}`);
    imageToDelete.remove();
  }

  function add_group(id, name, icon, access_token) {
    const type_account = '<%= type_account %>'

    if (type_account == "Basico") {
        if (groups.length >= 3) {
            alert_message("error", "Não é possível adicionar mais que 3 grupos")
        } else {
            const add = document.querySelector(`#add-group${id}`)
            add.style.display = "none";
            const remove = document.querySelector(`#del-group${id}`)
            remove.style.display = "flex";
            groups.push({id: id, name: name, icon: icon, access_token: access_token})

            let image = document.createElement('img')
            image.classList.add("w-8", "h-8", "rounded-full", `img${id}`)
            
            if (icon.length > 1) {
              image.src = icon

              min_img.appendChild(image);
            } else {
              const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
              svg.setAttribute("width", "30");
              svg.setAttribute("height", "30");
              svg.setAttribute("viewBox", "0 0 30 30");
              svg.setAttribute("fill", "none");
              svg.classList.add(`img${id}`)

              const group = document.createElementNS("http://www.w3.org/2000/svg", "g");
              group.setAttribute("clip-path", "url(#clip0_111_100)");

              const path = document.createElementNS("http://www.w3.org/2000/svg", "path");
              path.setAttribute("d", "M14.9212 4.71216C12.3376 4.71216 10.2432 7.15741 10.2432 10.1738C10.2432 12.2657 11.2506 14.0826 12.7299 15L11.0145 15.795L6.44948 17.9122C6.00848 18.1327 5.78838 18.5066 5.78838 19.0359C5.78838 20.7117 5.78838 22.3875 5.78838 24.0634C5.82465 24.692 6.2018 25.2778 6.81328 25.2878H23.0538C23.7519 25.2271 24.105 24.6648 24.1119 24.0634C24.1119 22.3876 24.1119 20.7117 24.1119 19.0359C24.1119 18.5066 23.8918 18.1327 23.4508 17.9122L19.0511 15.795L17.2227 14.9287C18.6413 13.9907 19.5992 12.2131 19.5992 10.1738C19.5992 7.15741 17.5047 4.71216 14.9212 4.71216ZM7.37558 6.63276C6.26375 6.67498 5.3826 7.15608 4.71315 7.92266C3.97265 8.84561 3.61165 9.94141 3.60467 11.0315C3.65015 12.6435 4.3714 14.1695 5.6554 14.9677L0.529075 17.3499C0.17625 17.4822 0 17.7909 0 18.276V22.3109C0.02755 22.8461 0.3054 23.2958 0.826375 23.3035H4.23348V19.0359C4.28985 17.8949 4.82565 16.9726 5.78838 16.5226L9.19455 14.9022C9.45915 14.7478 9.71283 14.538 9.95538 14.2734C8.55098 12.1065 8.35595 9.51108 9.26105 7.22833C8.67237 6.86806 8.0108 6.63653 7.37558 6.63276ZM22.5902 6.63276C21.8632 6.64798 21.1912 6.91573 20.6393 7.29386C21.5197 9.59728 21.2768 12.1943 19.9772 14.2069C20.2639 14.5376 20.5623 14.7913 20.871 14.9677L24.1452 16.5226C25.1426 17.0696 25.6569 18 25.6668 19.0359V23.3036H29.1727C29.7492 23.2538 29.995 22.7939 30 22.311V18.276C30 17.835 29.8238 17.5263 29.4709 17.3499L24.4102 14.9344C25.7226 13.9667 26.3816 12.5164 26.3944 11.0315C26.3595 9.85621 26.0004 8.76491 25.2859 7.92266C24.5392 7.11268 23.6132 6.64133 22.5902 6.63276Z");
              path.setAttribute("fill", "#752A7A");

              const defs = document.createElementNS("http://www.w3.org/2000/svg", "defs");
              const clipPath = document.createElementNS("http://www.w3.org/2000/svg", "clipPath");
              clipPath.setAttribute("id", "clip0_111_100");

              const rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
              rect.setAttribute("width", "30");
              rect.setAttribute("height", "30");
              rect.setAttribute("fill", "white");

              clipPath.appendChild(rect);
              defs.appendChild(clipPath);
              group.appendChild(path);
              svg.appendChild(group);
              svg.appendChild(defs);

              min_img.appendChild(svg)
            }
        }
    } else if (type_account == "Pro") {
        if (groups.length >= 9) {
            alert_message("error", "Não é possível adicionar mais que 9 grupos")
        } else {
            const add = document.querySelector(`#add-group${id}`)
            add.style.display = "none";
            const remove = document.querySelector(`#del-group${id}`)
            remove.style.display = "flex";
            groups.push({id: id, name: name, icon: icon, access_token: access_token})

            let image = document.createElement('img')
            image.classList.add("w-8", "h-8", "rounded-full", `img${id}`)
            
            if (icon.length > 1) {
              image.src = icon

              min_img.appendChild(image);
            } else {
              const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
              svg.setAttribute("width", "30");
              svg.setAttribute("height", "30");
              svg.setAttribute("viewBox", "0 0 30 30");
              svg.setAttribute("fill", "none");
              svg.classList.add(`img${id}`)

              const group = document.createElementNS("http://www.w3.org/2000/svg", "g");
              group.setAttribute("clip-path", "url(#clip0_111_100)");

              const path = document.createElementNS("http://www.w3.org/2000/svg", "path");
              path.setAttribute("d", "M14.9212 4.71216C12.3376 4.71216 10.2432 7.15741 10.2432 10.1738C10.2432 12.2657 11.2506 14.0826 12.7299 15L11.0145 15.795L6.44948 17.9122C6.00848 18.1327 5.78838 18.5066 5.78838 19.0359C5.78838 20.7117 5.78838 22.3875 5.78838 24.0634C5.82465 24.692 6.2018 25.2778 6.81328 25.2878H23.0538C23.7519 25.2271 24.105 24.6648 24.1119 24.0634C24.1119 22.3876 24.1119 20.7117 24.1119 19.0359C24.1119 18.5066 23.8918 18.1327 23.4508 17.9122L19.0511 15.795L17.2227 14.9287C18.6413 13.9907 19.5992 12.2131 19.5992 10.1738C19.5992 7.15741 17.5047 4.71216 14.9212 4.71216ZM7.37558 6.63276C6.26375 6.67498 5.3826 7.15608 4.71315 7.92266C3.97265 8.84561 3.61165 9.94141 3.60467 11.0315C3.65015 12.6435 4.3714 14.1695 5.6554 14.9677L0.529075 17.3499C0.17625 17.4822 0 17.7909 0 18.276V22.3109C0.02755 22.8461 0.3054 23.2958 0.826375 23.3035H4.23348V19.0359C4.28985 17.8949 4.82565 16.9726 5.78838 16.5226L9.19455 14.9022C9.45915 14.7478 9.71283 14.538 9.95538 14.2734C8.55098 12.1065 8.35595 9.51108 9.26105 7.22833C8.67237 6.86806 8.0108 6.63653 7.37558 6.63276ZM22.5902 6.63276C21.8632 6.64798 21.1912 6.91573 20.6393 7.29386C21.5197 9.59728 21.2768 12.1943 19.9772 14.2069C20.2639 14.5376 20.5623 14.7913 20.871 14.9677L24.1452 16.5226C25.1426 17.0696 25.6569 18 25.6668 19.0359V23.3036H29.1727C29.7492 23.2538 29.995 22.7939 30 22.311V18.276C30 17.835 29.8238 17.5263 29.4709 17.3499L24.4102 14.9344C25.7226 13.9667 26.3816 12.5164 26.3944 11.0315C26.3595 9.85621 26.0004 8.76491 25.2859 7.92266C24.5392 7.11268 23.6132 6.64133 22.5902 6.63276Z");
              path.setAttribute("fill", "#752A7A");

              const defs = document.createElementNS("http://www.w3.org/2000/svg", "defs");
              const clipPath = document.createElementNS("http://www.w3.org/2000/svg", "clipPath");
              clipPath.setAttribute("id", "clip0_111_100");

              const rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
              rect.setAttribute("width", "30");
              rect.setAttribute("height", "30");
              rect.setAttribute("fill", "white");

              clipPath.appendChild(rect);
              defs.appendChild(clipPath);
              group.appendChild(path);
              svg.appendChild(group);
              svg.appendChild(defs);

              min_img.appendChild(svg)
            }
        }
    } else if (type_account == "Avançado") {
      const add = document.querySelector(`#add-group${id}`)
      add.style.display = "none";
      const remove = document.querySelector(`#del-group${id}`)
      remove.style.display = "flex";
      groups.push({id: id, name: name, icon: icon, access_token: access_token})

      let image = document.createElement('img')
      image.classList.add("w-8", "h-8", "rounded-full", `img${id}`)
      
      if (icon.length > 1) {
        image.src = icon

        min_img.appendChild(image);
      } else {
        const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        svg.setAttribute("width", "30");
        svg.setAttribute("height", "30");
        svg.setAttribute("viewBox", "0 0 30 30");
        svg.setAttribute("fill", "none");
        svg.classList.add(`img${id}`)

        const group = document.createElementNS("http://www.w3.org/2000/svg", "g");
        group.setAttribute("clip-path", "url(#clip0_111_100)");

        const path = document.createElementNS("http://www.w3.org/2000/svg", "path");
        path.setAttribute("d", "M14.9212 4.71216C12.3376 4.71216 10.2432 7.15741 10.2432 10.1738C10.2432 12.2657 11.2506 14.0826 12.7299 15L11.0145 15.795L6.44948 17.9122C6.00848 18.1327 5.78838 18.5066 5.78838 19.0359C5.78838 20.7117 5.78838 22.3875 5.78838 24.0634C5.82465 24.692 6.2018 25.2778 6.81328 25.2878H23.0538C23.7519 25.2271 24.105 24.6648 24.1119 24.0634C24.1119 22.3876 24.1119 20.7117 24.1119 19.0359C24.1119 18.5066 23.8918 18.1327 23.4508 17.9122L19.0511 15.795L17.2227 14.9287C18.6413 13.9907 19.5992 12.2131 19.5992 10.1738C19.5992 7.15741 17.5047 4.71216 14.9212 4.71216ZM7.37558 6.63276C6.26375 6.67498 5.3826 7.15608 4.71315 7.92266C3.97265 8.84561 3.61165 9.94141 3.60467 11.0315C3.65015 12.6435 4.3714 14.1695 5.6554 14.9677L0.529075 17.3499C0.17625 17.4822 0 17.7909 0 18.276V22.3109C0.02755 22.8461 0.3054 23.2958 0.826375 23.3035H4.23348V19.0359C4.28985 17.8949 4.82565 16.9726 5.78838 16.5226L9.19455 14.9022C9.45915 14.7478 9.71283 14.538 9.95538 14.2734C8.55098 12.1065 8.35595 9.51108 9.26105 7.22833C8.67237 6.86806 8.0108 6.63653 7.37558 6.63276ZM22.5902 6.63276C21.8632 6.64798 21.1912 6.91573 20.6393 7.29386C21.5197 9.59728 21.2768 12.1943 19.9772 14.2069C20.2639 14.5376 20.5623 14.7913 20.871 14.9677L24.1452 16.5226C25.1426 17.0696 25.6569 18 25.6668 19.0359V23.3036H29.1727C29.7492 23.2538 29.995 22.7939 30 22.311V18.276C30 17.835 29.8238 17.5263 29.4709 17.3499L24.4102 14.9344C25.7226 13.9667 26.3816 12.5164 26.3944 11.0315C26.3595 9.85621 26.0004 8.76491 25.2859 7.92266C24.5392 7.11268 23.6132 6.64133 22.5902 6.63276Z");
        path.setAttribute("fill", "#752A7A");

        const defs = document.createElementNS("http://www.w3.org/2000/svg", "defs");
        const clipPath = document.createElementNS("http://www.w3.org/2000/svg", "clipPath");
        clipPath.setAttribute("id", "clip0_111_100");

        const rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
        rect.setAttribute("width", "30");
        rect.setAttribute("height", "30");
        rect.setAttribute("fill", "white");

        clipPath.appendChild(rect);
        defs.appendChild(clipPath);
        group.appendChild(path);
        svg.appendChild(group);
        svg.appendChild(defs);

        min_img.appendChild(svg)
      }
    }
  }

  function add_all_groups() {
    const groupsList = '<%= groupsAllFunction %>'

    const groupsListSplit = groupsList.split('{')

    groupsListSplit.forEach((group) => {
      group = group.replaceAll('&#34;', '')
      group = group.replaceAll('id:', '')
      group = group.replaceAll('}', '')
      group = group.replaceAll(']', '')
      group = group.replaceAll('access_token:', '')
      group = group.replaceAll('name:', '')
      group = group.replaceAll('image:', '')
      
      const array = group.split(',')

      if (array[0] != '[') {
        const findRepeat = { id: array[0] };
        const findTrue = groups.find((obj) => obj.id == findRepeat.id);

        if (findTrue) {
        } else {
          groups.push({ id: array[0], name: array[3], icon: array[2], access_token: array[1] });
        }
      }
    })

    const all = document.querySelector(".event-all");
    all.style.display = "none"

    const del = document.querySelector(".event-delete")
    del.style.display = "flex"

    const addGroups = document.querySelectorAll(".add-group");
    addGroups.forEach(group => {
      group.style.display = "none";
    });

    const removeGroups = document.querySelectorAll(".delete-group");
    removeGroups.forEach(group => {
      group.style.display = "flex";
    });

    let p = document.createElement('p')
    p.classList.add("inter", "font-semibold")
    p.innerText = "Todos os grupos"
    min_img.appendChild(p);
  }

  function delete_all_groups() {
    groups.length = 0

    const all = document.querySelector(".event-all");
    all.style.display = "flex"

    const del = document.querySelector(".event-delete")
    del.style.display = "none"

    const addGroups = document.querySelectorAll(".add-group");
    addGroups.forEach(group => {
      group.style.display = "flex";
    });

    const removeGroups = document.querySelectorAll(".delete-group");
    removeGroups.forEach(group => {
      group.style.display = "none";
    });

    const paragraphs = document.getElementsByTagName("p");

    for (let i = 0; i < paragraphs.length; i++) {
      const paragraph = paragraphs[i];
      
      if (paragraph.textContent == "Todos os grupos") {
        
        paragraph.parentNode.removeChild(paragraph);
      }
    }
  }

  function del_group(id, icon) {
    const add = document.querySelector(`#add-group${id}`)
    add.style.display = "flex";
    const remove = document.querySelector(`#del-group${id}`)
    remove.style.display = "none";
    groups.pop({id: id})

    const imageToDelete = document.querySelector(`.img${id}`);
    imageToDelete.remove();
  }
  
  function find_pages(id_account) {
    const pages_list = document.querySelector('.pages-list')
    pages_list.innerHTML = ""

    fetch('/platform/post_facebook/pages/' + id_account)
    .then(response => response.json())
    .then(data => {
      if (data.length > 0) {
        data.forEach(page => {
          const div_page = document.createElement('div')
          div_page.style = "display: flex; justify-content: space-between; margin-bottom: 20px"

          const div_name = document.createElement('div')
          div_name.style = "display: flex; align-itens: center"
          
          const name = document.createElement('p')
          name.innerText = page.name
          name.style = "display: flex !important; align-itens: center !important; font-size: 16px; margin-bottom: 10px; font-weight: bold; padding-bottom: 15px; color: #752A7A; display: flex; align-items: center;"

          const img = document.createElement('img')
          img.classList.add('page-icon')
          img.src = page.image

          div_name.appendChild(img)
          div_name.appendChild(name)

          const div_btn = document.createElement('div')
          const btn_add = document.createElement("button");
          btn_add.setAttribute("id", `add-page${page.id_page}`);
          btn_add.setAttribute("class", "event");
          btn_add.setAttribute("onclick", `add_page(${page.id_page}, '${page.name}', '${page.access_token}')`);
          btn_add.textContent = "Selecionar";
          
          const btn_del = document.createElement('button');
          btn_del.setAttribute('id', `del-page${page.id_page}`);
          btn_del.setAttribute('class', 'event');
          btn_del.setAttribute('style', 'display: none; background-color: #bb0404 !important;');
          btn_del.innerHTML = 'Excluir';
          btn_del.onclick = function() {
            del_page(page.id_page, page.name, page.access_token);
          };

          div_btn.appendChild(btn_add)
          div_btn.appendChild(btn_del)

          div_page.appendChild(div_name)
          div_page.appendChild(div_btn)

          pages_list.appendChild(div_page)
        })
      } else {
        const div_page = document.createElement('div')
        div_page.style = "display: flex; justify-content: center; align-itens: center; border: 2px solid #bb0404"
        
        const img = document.createElement('img')
        img.classList.add('page-icon')
        img.src = '../public/img/admin/Bulk/pages.png'

        const p = document.createElement('p')
        p.innerText = "Essa conta não possui nenhuma página. Por favor troque de conta."

        div_page.appendChild(img)
        div_page.appendChild(p)

        pages_list.appendChild(div_page)
      }
    })
  }
  
  function access(id_account) {
    fetch('/platform/post_facebook/access/' + id_account)
    .then(response => response.json())
    .then(data => {
      console.log(data)
    })
  }

  function show() {
    const divProgram = document.querySelector('.program').classList.remove("hidden")
  }
  
  function hide() {
    const divProgram = document.querySelector('.program').classList.add("hidden")
  }
  
  function setHide() {
    const close = document.querySelectorAll('.close')
    close.forEach((item) => {
      item.style.display = "none"
    })
  }

  function continue_options() {
    const errors = []
    const content = document.querySelector('#content-post');
    const day = document.querySelector('#day');
    const img = document.querySelector('.img-post');
    const hour = document.querySelector('#hour');
    const link = document.querySelector('#link')
    const files = document.querySelector('#files');

    const linkValid = /^(http|https):\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,}(\/\S*)?$/;

    if (groups.length == 0 && pages.length == 0) {
      alert_message("error", "Selecione pelo menos um grupo ou página")
      
      errors.push("error")
    }

    if (linkValid.test(link.value) == false) {
      if (images.length == 0) {
        alert_message("error", "Insira uma imagem ou link")
        errors.push("error")
      }
    }

    if (errors.length == 0) {
      openPost()
    }
  }

  async function post() {
    const errors = []
    const content = document.querySelector('#content-post');
    const day = document.querySelector('#day');
    const hour = document.querySelector('#hour');
    const link = document.querySelector('#link');
    const files = document.querySelector('#files');
    const program = document.querySelector('#program-yes');
    const no_program = document.querySelector('#program-no');

    closePost()

    const popup = document.querySelector("#popup_await")
    popup.classList.remove("hidden")

    const linkValid = /^(http|https):\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,}(\/\S*)?$/;

    if (groups.length == 0 && pages.length == 0) {
      const pages = document.querySelector('.pages')
      pages.style = "background-color: #e00d0d50"

      alert_message("error", "Selecione pelo menos um grupo ou página")
      
      errors.push('error')
    }

    if (linkValid.test(link.value) == false) {
      if (images.length == 0) {
        files.style = "border: 2px dashed #e00d0d !important;";
        errors.push("Preencha o campo conteúdo")
      }
    }

    if (program.checked) {
      if (day.value == "") {
        day.style.border = "2px solid #e00d0d";
        errors.push("Selecione o dia")
      }
      if (hour.value == "") {
        hour.style.border = "2px solid #e00d0d";
        errors.push("Selecione a hora")
      }
    }

    if (errors.length == 0) {
      const content_post = document.querySelector('#content-post');
      const groups_pages = []

      const list = pages.length + groups.length
      const check = []
      const ids = []
      const results = []

      pages.forEach((page) => {
        groups_pages.push({content: page, type: "page"})
      })

      groups.forEach((group) => {
        groups_pages.push({content: group, type: "group"})
      })

      groups_pages.forEach((item, index) => {
        const formData = new FormData();
        formData.append('access_token', item.content.access_token);
        formData.append('message', content.value)
        formData.append('link', link.value)

        if (program.checked) {
          const date = new Date(day.value + " " + hour.value);
          const scheduledTime = Math.floor(date.getTime() / 1000);
          
          formData.append('scheduled_publish', scheduledTime)
          formData.append('published', false)
        }

        Promise.all(images.map(image => {
          const reader = new FileReader();

          return new Promise((resolve, reject) => {
            if (files.files.length > 0) {
              if (files.files[0].type.startsWith('video/')) {
                reader.onload = () => {
                  const videoData = new Uint8Array(reader.result);
                  const blob = new Blob([videoData], { type: 'video/mp4' });
                  formData.append('source', blob, 'video.mp4');
                  formData.append('message', content.value)
                  resolve();
                };

                reader.readAsArrayBuffer(image);
              } else {
                reader.onload = () => {
                  const imageData = new Uint8Array(reader.result);
                  const blob = new Blob([imageData], { type: image.type });
                  formData.append('source', blob, image.name);
                  resolve();
                };

                reader.readAsArrayBuffer(image);
              }
            }
          });
        }))
        .then(() => {
          let endpoint = ""
          
          if (files.files.length > 0) {
            if (files.files[0].type.startsWith('video/')) {
              endpoint = "videos"
            } else {
              endpoint = "photos"
            }
          } else {
            endpoint = "feed"
          }

          if (program.checked == false) {
            return fetch(`https://graph.facebook.com/v16.0/${item.content.id}/${endpoint}`, {
              method: 'POST',
              body: formData
            })
            .then(response => response.json())
            .then(data => {
              if (data.id == undefined) {
                alert_message("error", `Você deve adicionar "pluBee" aos aplicativos do grupo: ${item.content.name}`)
                if (item.type == "group") {
                  results.push({id: "", name: item.content.name, icon: item.content.icon, status: "error", type: item.type, group_id: item.content.id})
                } else if (item.type == "page") {
                  results.push({id: "", name: item.content.name, icon: item.content.icon, status: "error", type: item.type, page_id: item.content.id})
                }
              } else {
                if (item.type == "group") {
                  results.push({id: `${data.id}`, name: item.content.name, icon: item.content.icon, status: "published", type: item.type, group_id: item.content.id})
                } else if (item.type == "page"){
                  results.push({id: `${data.id}`, name: item.content.name, icon: item.content.icon, status: "published", type: item.type, page_id: item.content.id})
                }
                ids.push(`${data.id}_${item.content.access_token}_${item.type}`)
              }

              return data;
            })
            .catch(error => {
              alert_message("error", "Ocorreu um erro.")
            });
          } else {
            ids.push('xxxxxx_xxxxxxxx')
          }
        })
        .then(response => {
          groups_pages.pop()
          if (groups_pages.length == 0) {
            popup.classList.add("hidden")
            alert_message("success", "Sucesso!")

            let path_image = '';

            if (files.files.length > 0 && program.checked == true) {
              const formData = new FormData();
              formData.append('image', files.files[0]);

              return fetch('/platform/post/upload', {
                method: 'POST',
                body: formData
              })
              .then((response) => {
                return response.text()
              })
              .then((filename) => {
                path_image = filename;

                return fetch('/platform/post_facebook/new', {
                  method: 'POST',
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({pages: pages, groups: groups, content: content.value, program: program.checked, day: day.value, hour: hour.value, image: "program_image", ids_posts: ids, path_image: path_image, link: link.value, results: results})
                })
                .then(response => {
                  content.value = ''
                  link.value = ''
                  div_image.classList.remove("hidden")
                  div_link.classList.remove("hidden")
                  image_success.classList.add("hidden")
                  link_success.classList.add("hidden")
                  file_input.disabled = false
                  file_input.readOnly = false
                  div_image.classList.add("flex", "flex-col")
                  images = []
                })
                .catch(err => {
                  console.error(err)
                })
              })
            } else if (files.files.length > 0 && program.checked == false) {
              const filter = ids[0].split('_')

              return fetch(`https://graph.facebook.com/v16.0/${filter[0]}?fields=picture&access_token=${filter[1]}`)
              .then(response => response.json())
              .then(data => {
                const imageUrl = data.picture;
                return fetch('/platform/post_facebook/new', {
                  method: 'POST',
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({pages: pages, groups: groups, content: content.value, program: program.checked, day: day.value, hour: hour.value, image: imageUrl, ids_posts: ids, path_image: path_image, link: link.value, results: results})
                })
              })
              .then(response => {
                content.value = ''
                link.value = ''
                div_image.classList.remove("hidden")
                div_link.classList.remove("hidden")
                image_success.classList.add("hidden")
                link_success.classList.add("hidden")
                file_input.disabled = false
                file_input.readOnly = false
                div_image.classList.add("flex", "flex-col")
                images = []
              })
              .catch(err => {
                console.error(err)
              })
            } else {
              return fetch('/platform/post_facebook/new', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({pages: pages, groups: groups, content: content.value, program: program.checked, day: day.value, hour: hour.value, image: 'link', ids_posts: ids, path_image: path_image, link: link.value, results: results})
              })
              .then(response => {
                content.value = ''
                link.value = ''
                div_image.classList.remove("hidden")
                div_link.classList.remove("hidden")
                image_success.classList.add("hidden")
                link_success.classList.add("hidden")
                file_input.disabled = false
                file_input.readOnly = false
                div_image.classList.add("flex", "flex-col")
                images = []
              })
            }
          }
        })
        .catch(error => {
          console.log(error)
          alert_message("error", `Erro`)
        });
      })
    }
  }
</script>
</html>